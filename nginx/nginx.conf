events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Custom log format for download monitoring  
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time '
                       '$request_length $body_bytes_sent '
                       '"$uri" "$args" "$request_id"';

    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    server_tokens off;
    
    # Rate limiting zones (define in http block)
    limit_req_zone $binary_remote_addr zone=files:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/m;
    
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Robots-Tag "noindex, nofollow" always;
        add_header Server "nginx" always;  # Hide nginx version
        
        # Security: Drop connection for suspicious requests
        # Block common scanning patterns
        if ($request_uri ~* "(\.php|\.asp|\.aspx|\.jsp|\.cgi|wp-admin|wp-login|admin|phpmyadmin|xmlrpc)") {
            return 444;  # Drop connection without response
        }
        
        # Block requests with suspicious user agents
        if ($http_user_agent ~* "(nmap|nikto|sqlmap|masscan|zmap|shodan|censys|scanner|bot|crawl)") {
            return 444;  # Drop connection without response
        }
        
        # Block requests without proper Host header for this service
        # Temporarily disabled for testing
        # if ($host !~* "\.ts\.net$") {
        #     return 444;  # Drop connection without response
        # }
        
        # Nginx status endpoint for monitoring
        location /nginx-status {
            # Rate limit status endpoint
            limit_req zone=general burst=10 nodelay;
            
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker networks
            deny all;
        }

        # Health check endpoint
        location /nginx-health {
            # Rate limit health checks
            limit_req zone=general burst=20 nodelay;
            
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Test endpoint to debug configuration
        location /files {
            return 200 "files location hit\n";
            add_header Content-Type text/plain;
        }

        # File serving for tunnels via symlinks - courtesy page by default
        location ~ ^/files/([^/]+)/(.+)$ {
            # Apply rate limiting for page requests
            limit_req zone=general burst=10 nodelay;
            
            set $tunnel_id $1;
            set $requested_path $2;
            
            # Additional security: validate tunnel ID format (8 character hex)
            if ($tunnel_id !~ "^[a-f0-9]{8}$") {
                return 444;  # Drop connection for invalid tunnel IDs
            }
            
            # Security: prevent path traversal
            if ($uri ~ "\.\.") {
                return 444;  # Drop connection for path traversal attempts
            }
            
            # Check if this is a download request (has ?download=1 parameter)
            # If so, redirect to the download location using HTTPS
            if ($arg_download = "1") {
                return 302 https://$host/download-file/$tunnel_id/$requested_path;
            }
            
            # Default: serve courtesy page with file information
            return 200 '<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Download Ready</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: system-ui, -apple-system, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            color: #333;
            padding: 20px;
        }
        .container {
            background: white;
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            max-width: 500px;
            width: 100%;
            text-align: center;
        }
        .icon { font-size: 48px; margin-bottom: 20px; }
        h1 { color: #2c3e50; margin-bottom: 10px; font-size: 24px; }
        .file-info {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
            border-left: 4px solid #667eea;
        }
        .file-name {
            font-size: 18px;
            font-weight: bold;
            color: #2c3e50;
            word-break: break-all;
            margin-bottom: 10px;
        }
        .download-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 50px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: transform 0.2s;
            text-decoration: none;
            display: inline-block;
            margin-top: 10px;
        }
        .download-btn:hover { transform: translateY(-2px); }
        .warning {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            color: #856404;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
            font-size: 14px;
        }
        .footer { margin-top: 30px; font-size: 12px; color: #999; }
    </style>
</head>
<body>
    <div class="container">
        <div class="icon">üìÑ</div>
        <h1>Your File is Ready to Download</h1>
        
        <div class="file-info">
            <div class="file-name">$requested_path</div>
            <div style="color: #666; font-size: 14px; margin-top: 10px;">
                Tunnel ID: $tunnel_id
            </div>
        </div>

        <div class="warning">
            ‚ö†Ô∏è This is a secure, time-limited download link. Click the button below to download your file.
        </div>

        <a href="?download=1" class="download-btn">
            ‚¨áÔ∏è Download File
        </a>

        <div class="footer">
            Secure ephemeral file sharing
        </div>
    </div>
</body>
</html>';
            add_header Content-Type "text/html; charset=utf-8" always;
        }

        # Actual file download endpoint
        location ~ ^/download-file/([^/]+)/(.+)$ {
            # Apply rate limiting for file downloads
            limit_req zone=files burst=5 nodelay;
            
            set $tunnel_id $1;
            set $requested_path $2;
            
            # Additional security: validate tunnel ID format (8 character hex)
            if ($tunnel_id !~ "^[a-f0-9]{8}$") {
                return 444;  # Drop connection for invalid tunnel IDs
            }
            
            # Security: prevent path traversal
            if ($uri ~ "\.\.") {
                return 444;  # Drop connection for path traversal attempts
            }
            
            # Serve the actual file with download headers
            alias /tunnels/$tunnel_id/file;
            
            # Enable range requests for resumable downloads
            add_header Accept-Ranges bytes always;
            
            # Download-specific headers
            add_header X-Tunnel-ID $tunnel_id always;
            add_header X-Request-ID $request_id always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Expires "0" always;
            add_header Pragma "no-cache" always;
            add_header Content-Disposition "attachment; filename=\"$requested_path\"" always;
            
            # Large file download settings
            client_max_body_size 0;
        }

        # Deny access to data directory directly
        location /data/ {
            return 444;  # Drop connection silently
        }
        
        # Block common probe paths silently
        location ~ ^/(\.well-known|robots\.txt|sitemap\.xml|favicon\.ico)$ {
            return 444;  # Drop connection silently
        }
        
        # Block any attempt to access hidden files/directories
        location ~ /\. {
            return 444;  # Drop connection silently  
        }

        # Default - drop connection silently for all other requests (security)
        location / {
            return 444;  # Drop connection without any response (makes port scanning less informative)
        }
    }
} 